--local start_game = hash("start_game")
local anim_delay = 0.6

local function update_score(self, value)
    gui.set_text(gui.get_node("score_text"), tostring(value))
end

local function update_timer(self, value)
    if value <= 0 then
        value = 0
    end
    gui.set_text(gui.get_node("timeleft_text"), tostring(value))
end

local function hide_message_text(self)
    gui.set_position(self.msg, vmath.vector3(240, - 100, 0))
end

local function show_message(self, text)
    --gui.set_position(self.msg, vmath.vector3(240, 360, 0))
    gui.animate(self.msg, gui.PROP_POSITION, vmath.vector3(240, 360, 0), gui.EASING_INOUTQUAD, anim_delay)
    gui.set_text(self.msg, text)
    timer.delay(2.0, false, hide_message_text)
end

local function start_button_pressed(self)
    gui.animate(self.btn, gui.PROP_POSITION, vmath.vector3(240, 900, 0), gui.EASING_INOUTQUAD, anim_delay)
    gui.animate(self.msg, gui.PROP_POSITION, vmath.vector3(240, - 100, 0), gui.EASING_INOUTQUAD, anim_delay)
    msg.post("/game_manager", "new_game")
end

local function show_game_over(self)
    show_message(self, "Game Over!")
    timer.delay(2.0, false, function()
        gui.animate(self.btn, gui.PROP_POSITION, vmath.vector3(240, 150, 0), gui.EASING_INOUTQUAD, anim_delay)
        gui.animate(self.msg, gui.PROP_POSITION, vmath.vector3(240, 360, 0), gui.EASING_INOUTQUAD, anim_delay)
        gui.set_text(self.msg, "Bunny Money!")
    end)
end


function init(self)
    msg.post(".", "acquire_input_focus")
    self.msg = gui.get_node("message_text")
    self.btn = gui.get_node("button")
end

function final(self)
    msg.post(".", "release_input_focus")
end


function on_input(self, action_id, action)
    if gui.pick_node(gui.get_node("button"), action.x, action.y) and action_id == hash("left_click") and action.pressed then
        start_button_pressed(self)
    end
    if action_id == hash("exit") and action.released then
        msg.post("@system:", "exit", {code = 0})
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("update_score") then
        update_score(self, message.value)
    end

    if message_id == hash("update_timer") then
        update_timer(self, message.value)
    end

    if message_id == hash("show_game_over") then
        show_game_over(self)
    end
end
