go.property("speed", 350)
go.property("screen_size", vmath.vector3(480, 720, 0))

local hurt = hash("hurt")
local pickup = hash("pickup")

local function play_animation(self, animation)
    if self.current_animation ~= animation then
        self.current_animation = animation
        sprite.play_flipbook("#sprite", animation)
    end
end

function start(self, pos)
    go.cancel_animations(".", "position.x")
    go.cancel_animations("#sprite", "tint")
    sprite.reset_constant("#sprite", "tint")
    go.set_position(pos)

    self.is_playing = true
    msg.post(".", "enable")
    play_animation(self, hash("bunny_idle"))
end

local function die(self)
    play_animation(self, hash("bunny_hurt"))
    self.is_playing = false
end

function init(self)
    msg.post(".", "acquire_input_focus")
    self.vel = vmath.vector3()
    self.screen_size = vmath.vector3(480, 720, 0)
    msg.post(".", "disable")
    self.is_playing = false
    --print("pos: " .. tostring(go.get_position()))
end

function final(self)
    msg.post(".", "release_input_focus")
end

function update(self, dt)
    if not self.is_playing then
        return
    end

    pos = go.get_position()
    if pos.x < 0 then pos.x = 0 end
    if pos.x > self.screen_size.x then pos.x = self.screen_size.x end
    if pos.y < 0 then pos.y = 0 end
    if pos.y > self.screen_size.y then pos.y = self.screen_size.y end
    pos = pos + self.vel * dt
    go.set_position(pos)

    if vmath.length(self.vel) > 0 then
        play_animation(self, hash("bunny_run"))
        sprite.set_hflip("#sprite", self.vel.x < 0)
    else
        play_animation(self, hash("bunny_idle"))
    end

    self.vel = vmath.vector3()
end

function on_message(self, message_id, message, sender)
    if message_id == hash("trigger_response") then
        if message.other_group == hash("coin") then
            msg.post(message.other_id, pickup)
        elseif message.other_group == hash("powerup") then
            msg.post(message.other_id, pickup)
        elseif message.other_group == hash("enemy") then
            msg.post("/game_manager", "player_hurt")
            go.set_position(vmath.vector3(220, 250, 0) )
            go.animate(".", "position.x", go.PLAYBACK_LOOP_PINGPONG, 260, go.EASING_LINEAR, 1.0)
            go.animate("#sprite", "tint", go.PLAYBACK_LOOP_PINGPONG, vmath.vector4(1, 1, 1, 0), go.EASING_LINEAR, 0.2)
        end
    end

    if message_id == hash("start") then
        start(self, message.pos)
    end

    if message_id == hash("die") then
        die(self)
    end
end

function on_input(self, action_id, action)
    if action_id == hash("left") then
        self.vel.x = self.vel.x - 1
    end
    if action_id == hash("right") then
        self.vel.x = self.vel.x + 1
    end
    if action_id == hash("up") then
        self.vel.y = self.vel.y + 1
    end
    if action_id == hash("down") then
        self.vel.y = self.vel.y - 1
    end

    if vmath.length(self.vel) > 0 then
        self.vel = vmath.normalize(self.vel) * self.speed
    end
end
